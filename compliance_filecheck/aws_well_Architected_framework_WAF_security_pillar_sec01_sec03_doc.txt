Requirement Id: SEC01-BP01
        - Description: Establish common guardrails and isolation between environments (such as production, development, and test) and workloads through a multi-account strategy. Account-level separation is strongly recommended, as it provides a strong isolation boundary for security, billing, and access.
        - Checks:
                organizations_account_part_of_organizations

Requirement Id: SEC01-BP02
        - Description: The root user is the most privileged user in an AWS account, with full administrative access to all resources within the account, and in some cases cannot be constrained by security policies. Deactivating programmatic access to the root user, establishing appropriate controls for the root user, and avoiding routine use of the root user helps reduce the risk of inadvertent exposure of the root credentials and subsequent compromise of the cloud environment.
        - Checks:
                iam_root_hardware_mfa_enabled
                iam_root_mfa_enabled
                iam_no_root_access_key

Requirement Id: SEC01-BP03
        - Description: Based on your compliance requirements and risks identified from your threat model, derive and validate the control objectives and controls that you need to apply to your workload. Ongoing validation of control objectives and controls help you measure the effectiveness of risk mitigation.
        - Checks:

Requirement Id: SEC01-BP04
        - Description: To help you define and implement appropriate controls, recognize attack vectors by staying up to date with the latest security threats. Consume AWS Managed Services to make it easier to receive notification of unexpected or unusual behavior in your AWS accounts. Investigate using AWS Partner tools or third-party threat information feeds as part of your security information flow. The Common Vulnerabilities and Exposures (CVE) List  list contains publicly disclosed cyber security vulnerabilities that you can use to stay up to date.
        - Checks:

Requirement Id: SEC01-BP05
        - Description: Stay up-to-date with both AWS and industry security recommendations to evolve the security posture of your workload. AWS Security Bulletins contain important information about security and privacy notifications.
        - Checks:

Requirement Id: SEC01-BP06
        - Description: Establish secure baselines and templates for security mechanisms that are tested and validated as part of your build, pipelines, and processes. Use tools and automation to test and validate all security controls continuously. For example, scan items such as machine images and infrastructure-as-code templates for security vulnerabilities, irregularities, and drift from an established baseline at each stage. AWS CloudFormation Guard can help you verify that CloudFormation templates are safe, save you time, and reduce the risk of configuration error.Reducing the number of security misconfigurations introduced into a production environment is critical—the more quality control and reduction of defects you can perform in the build process, the better. Design continuous integration and continuous deployment (CI/CD) pipelines to test for security issues whenever possible. CI/CD pipelines offer the opportunity to enhance security at each stage of build and delivery. CI/CD security tooling must also be kept updated to mitigate evolving threats.Track changes to your workload configuration to help with compliance auditing, change management, and investigations that may apply to you. You can use AWS Config to record and evaluate your AWS and third-party resources. It allows you to continuously audit and assess the overall compliance with rules and conformance packs, which are collections of rules with remediation actions.Change tracking should include planned changes, which are part of your organization's change control process (sometimes referred to as MACD—Move, Add, Change, Delete), unplanned changes, and unexpected changes, such as incidents. Changes might occur on the infrastructure, but they might also be related to other categories, such as changes in code repositories, machine images and application inventory changes, process and policy changes, or documentation changes.
        - Checks:
                ec2_instance_managed_by_ssm
                ecr_repositories_scan_images_on_push_enabled
                ecr_repositories_scan_vulnerabilities_in_latest_image

Requirement Id: SEC01-BP07
        - Description: Perform threat modeling to identify and maintain an up-to-date register of potential threats and associated mitigations for your workload. Prioritize your threats and adapt your security control mitigations to prevent, detect, and respond. Revisit and maintain this in the context of your workload, and the evolving security landscape.
        - Checks:
                wellarchitected_workload_no_high_or_medium_risks

Requirement Id: SEC01-BP08
        - Description: Evaluate and implement security services and features from AWS and AWS Partners that allow you to evolve the security posture of your workload. The AWS Security Blog highlights new AWS services and features, implementation guides, and general security guidance. What's New with AWS? is a great way to stay up to date with all new AWS features, services, and announcements.
        - Checks:

Requirement Id: SEC02-BP01
        - Description: Sign-ins (authentication using sign-in credentials) can present risks when not using mechanisms like multi-factor authentication (MFA), especially in situations where sign-in credentials have been inadvertently disclosed or are easily guessed. Use strong sign-in mechanisms to reduce these risks by requiring MFA and strong password policies.
        - Checks:
                iam_password_policy_lowercase
                iam_password_policy_minimum_length_14
                iam_password_policy_number
                iam_password_policy_reuse_24
                iam_password_policy_symbol
                iam_password_policy_uppercase
                directoryservice_radius_server_security_protocol
                directoryservice_supported_mfa_radius_enabled
                iam_user_hardware_mfa_enabled
                iam_user_mfa_enabled_console_access
                iam_user_two_active_access_key
                iam_user_no_setup_initial_access_key
                opensearch_service_domains_use_cognito_authentication_for_kibana
                sagemaker_notebook_instance_root_access_disabled
                iam_avoid_root_usage

Requirement Id: SEC02-BP02
        - Description: When doing any type of authentication, it’s best to use temporary credentials instead of long-term credentials to reduce or eliminate risks, such as credentials being inadvertently disclosed, shared, or stolen.
        - Checks:
                iam_rotate_access_key_90_days

Requirement Id: SEC02-BP03
        - Description: A workload requires an automated capability to prove its identity to databases, resources, and third-party services. This is accomplished using secret access credentials, such as API access keys, passwords, and OAuth tokens. Using a purpose-built service to store, manage, and rotate these credentials helps reduce the likelihood that those credentials become compromised.
        - Checks:
                autoscaling_find_secrets_ec2_launch_configuration
                awslambda_function_no_secrets_in_code
                awslambda_function_no_secrets_in_variables
                cloudformation_stack_outputs_find_secrets
                ec2_instance_secrets_user_data
                ec2_launch_template_no_secrets
                ecs_task_definitions_no_environment_secrets
                ssm_document_secrets

Requirement Id: SEC02-BP04
        - Description: For workforce identities, rely on an identity provider that enables you to manage identities in a centralized place. This makes it easier to manage access across multiple applications and services, because you are creating, managing, and revoking access from a single location. For example, if someone leaves your organization, you can revoke access for all applications and services (including AWS) from one location. This reduces the need for multiple credentials and provides an opportunity to integrate with existing human resources (HR) processes. For federation with individual AWS accounts, you can use centralized identities for AWS with a SAML 2.0-based provider with AWS Identity and Access Management. You can use any provider— whether hosted by you in AWS, external to AWS, or supplied by the AWS Partner—that is compatible with the SAML 2.0 protocol. You can use federation between your AWS account and your chosen provider to grant a user or application access to call AWS API operations by using a SAML assertion to get temporary security credentials. Web-based single sign-on is also supported, allowing users to sign in to the AWS Management Console from your sign in website. For federation to multiple accounts in your AWS Organizations, you can configure your identity source in AWS IAM Identity Center (successor to AWS Single Sign-On) (IAM Identity Center), and specify where your users and groups are stored. Once configured, your identity provider is your source of truth, and information can be synchronized using the System for Cross-domain Identity Management (SCIM) v2.0 protocol. You can then look up users or groups and grant them IAM Identity Center access to AWS accounts, cloud applications, or both. IAM Identity Center integrates with AWS Organizations, which enables you to configure your identity provider once and then grant access to existing and new accounts managed in your organization. IAM Identity Center provides you with a default store, which you can use to manage your users and groups. If you choose to use the IAM Identity Center store, create your users and groups and assign their level of access to your AWS accounts and applications, keeping in mind the best practice of least privilege. Alternatively, you can choose to Connect to Your External Identity Provider using SAML 2.0, or Connect to Your Microsoft AD Directory using AWS Directory Service. Once configured, you can sign into the AWS Management Console, or the AWS mobile app, by authenticating through your central identity provider. For managing end-users or consumers of your workloads, such as a mobile app, you can use Amazon Cognito. It provides authentication, authorization, and user management for your web and mobile apps. Your users can sign in directly with sign-in credentials, or through a third party, such as Amazon, Apple, Facebook, or Google.
        - Checks:
                iam_role_cross_service_confused_deputy_prevention

Requirement Id: SEC02-BP05
        - Description: When you cannot rely on temporary credentials and require long-term credentials, audit credentials to ensure that the defined controls for example, multi-factor authentication (MFA), are enforced, rotated regularly, and have the appropriate access level. Periodic validation, preferably through an automated tool, is necessary to verify that the correct controls are enforced. For human identities, you should require users to change their passwords periodically and retire access keys in favor of temporary credentials. As you are moving from users to centralized identities, you can generate a credential report to audit your users. We also recommend that you enforce MFA settings in your identity provider. You can set up AWS Config Rules to monitor these settings. For machine identities, you should rely on temporary credentials using IAM roles. For situations where this is not possible, frequent auditing and rotating access keys is necessary.
        - Checks:
                iam_rotate_access_key_90_days
                kms_cmk_rotation_enabled
                secretsmanager_automatic_rotation_enabled

Requirement Id: SEC02-BP06
        - Description: As the number of users you manage grows, you will need to determine ways to organize them so that you can manage them at scale. Place users with common security requirements in groups defined by your identity provider, and put mechanisms in place to ensure that user attributes that may be used for access control (for example, department or location) are correct and updated. Use these groups and attributes to control access, rather than individual users. This allows you to manage access centrally by changing a user's group membership or attributes once with a permission set, rather than updating many individual policies when a user's access needs change. You can use AWS IAM Identity Center (successor to AWS Single Sign-On) (IAM Identity Center) to manage user groups and attributes. IAM Identity Center supports most commonly used attributes whether they are entered manually during user creation or automatically provisioned using a synchronization engine, such as defined in the System for Cross-Domain Identity Management (SCIM) specification.
        - Checks:
                iam_policy_allows_privilege_escalation
                iam_policy_attached_only_to_group_or_roles

Requirement Id: SEC03-BP01
        - Description: Each component or resource of your workload needs to be accessed by administrators, end users, or other components. Have a clear definition of who or what should have access to each component, choose the appropriate identity type and method of authentication and authorization.
        - Checks:
                ec2_instance_imdsv2_enabled
                ec2_instance_profile_attached
                cloudwatch_cross_account_sharing_disabled

Requirement Id: SEC03-BP02
        - Description: Grant only the access that identities require by allowing access to specific actions on specific AWS resources under specific conditions. Rely on groups and identity attributes to dynamically set permissions at scale, rather than defining permissions for individual users. For example, you can allow a group of developers access to manage only resources for their project. This way, when a developer is removed from the group, access for the developer is revoked everywhere that group was used for access control, without requiring any changes to the access policies.
        - Checks:
                ec2_instance_profile_attached
                iam_aws_attached_policy_no_administrative_privileges
                iam_customer_attached_policy_no_administrative_privileges
                iam_customer_unattached_policy_no_administrative_privileges
                iam_inline_policy_no_administrative_privileges
                opensearch_service_domains_internal_user_database_enabled

Requirement Id: SEC03-BP03
        - Description: A process that allows emergency access to your workload in the unlikely event of an automated process or pipeline issue. This will help you rely on least privilege access, but ensure users can obtain the right level of access when they require it. For example, establish a process for administrators to verify and approve their request, such as an emergency AWS cross-account role for access, or a specific process for administrators to follow to validate and approve an emergency request.
        - Checks:
                account_maintain_current_contact_details
                account_security_contact_information_is_registered
                account_security_questions_are_registered_in_the_aws_account

Requirement Id: SEC03-BP04
        - Description: As your teams determine what access is required, remove unneeded permissions and establish review processes to achieve least privilege permissions. Continually monitor and remove unused identities and permissions for both human and machine access.
        - Checks:
                iam_customer_attached_policy_no_administrative_privileges
                iam_customer_unattached_policy_no_administrative_privileges

Requirement Id: SEC03-BP05
        - Description: Establish common controls that restrict access to all identities in your organization. For example, you can restrict access to specific AWS Regions, or prevent your operators from deleting common resources, such as an IAM role used for your central security team.
        - Checks:
                organizations_account_part_of_organizations

Requirement Id: SEC03-BP06
        - Description: Integrate access controls with operator and application lifecycle and your centralized federation provider. For example, remove a user's access when they leave the organization or change roles. As you manage workloads using separate accounts, there will be cases where you need to share resources between those accounts. We recommend that you share resources using AWS Resource Access Manager (AWS RAM). This service enables you to easily and securely share AWS resources within your AWS Organizations and Organizational Units. Using AWS RAM, access to shared resources is automatically granted or revoked as accounts are moved in and out of the Organization or Organization Unit with which they are shared. This helps ensure that resources are only shared with the accounts that you intend.
        - Checks:
                appstream_fleet_maximum_session_duration
                appstream_fleet_session_disconnect_timeout
                appstream_fleet_session_idle_disconnect_timeout
                cloudwatch_log_group_retention_policy_specific_days_enabled
                codebuild_project_older_90_days
                ec2_elastic_ip_unassigned
                ecr_repositories_lifecycle_policy_enabled
                elbv2_listeners_underneath
                iam_password_policy_expires_passwords_within_90_days_or_less

Requirement Id: SEC03-BP07
        - Description: Continuously monitor findings that highlight public and cross-account access. Reduce public access and cross-account access to only resources that require this type of access.
        - Checks:
                ec2_ebs_public_snapshot
                ec2_instance_public_ip
                opensearch_service_domains_not_publicly_accessible
                emr_cluster_master_nodes_no_public_ip
                emr_cluster_account_public_block_enabled
                emr_cluster_publicly_accesible
                glacier_vaults_policy_public_access
                awslambda_function_not_publicly_accessible
                awslambda_function_not_publicly_accessible
                rds_instance_no_public_access
                rds_snapshots_public_access
                kms_key_not_publicly_accessible
                opensearch_service_domains_not_publicly_accessible
                redshift_cluster_public_access
                s3_account_level_public_access_blocks
                s3_bucket_public_access
                s3_bucket_policy_public_write_access
                sagemaker_notebook_instance_without_direct_internet_access_configured
                appstream_fleet_default_internet_access_disabled
                apigateway_restapi_public
                awslambda_function_url_cors_policy
                awslambda_function_url_public
                cloudtrail_logs_s3_bucket_is_not_publicly_accessible
                codeartifact_packages_external_public_publishing_disabled
                ecr_repositories_not_publicly_accessible
                efs_not_publicly_accessible
                eks_cluster_not_publicly_accessible
                elb_internet_facing
                elbv2_internet_facing
                s3_account_level_public_access_blocks
                sns_topics_not_publicly_accessible
                sqs_queues_not_publicly_accessible
                ssm_documents_set_as_public
                ec2_securitygroup_allow_wide_open_public_ipv4
                ec2_ami_public

Requirement Id: SEC03-BP08
        - Description: Govern the consumption of shared resources across accounts or within your AWS Organizations. Monitor shared resources and review shared resource access.
        - Checks:
                opensearch_service_domains_not_publicly_accessible
                awslambda_function_not_publicly_accessible
                sagemaker_notebook_instance_without_direct_internet_access_configured
                ssm_document_secrets
                codebuild_project_user_controlled_buildspec